{"version":3,"sources":["configuration.js","sock.js","components/expendablecomponent.jsx","aws-exports.js","App.js","index.js"],"names":["configuration","connection","socket","getsocket","console","log","openSocket","connected","NotificationsIO","this","id","Date","now","toConsole","that","state","args","msgflat","join","CreateReport","subscribers","on","data","JSON","stringify","error","length","forEach","el","getReport","push","emit","props","jobid","filter","JobNotifications","dt_errors_columns","name","selector","sortable","cell","row","href","search","component","release","dt_report_columns","ExpendableComponent","report","invocations","execution_duration","errors","execution_report","msg","subscribe","msgdata","setState","unsubscribe","Fragment","last_execution_time","title","columns","className","renderReport","Component","awsmobile","Amplify","configure","awsconfig","App","response","endpoint","notification","expandableRows","expandableRowsComponent","key","onClick","startJob","withAuthenticator","includeGreetings","ReactDOM","render","React","createElement","document","getElementById"],"mappings":"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","file":"static/js/main.e4770e27.chunk.js","sourcesContent":["const configuration = {\r\n    connection: 'http://192.168.1.21:3030'\r\n}\r\nexport default configuration;","import openSocket from \"socket.io-client\";\r\nimport configuration from './configuration';\r\n\r\nvar socket = null;\r\nvar getsocket = function () {\r\n\r\n    console.log(socket);\r\n    if (socket === null) {\r\n        socket = openSocket(configuration.connection);\r\n        console.log(\"Opening socketio socket, connection: \", socket.connected);\r\n    }\r\n    return socket\r\n}\r\n\r\n\r\nclass NotificationsIO {\r\n    constructor() {\r\n        this.id = \"NotificationsIO_\" + Date.now()\r\n        this.socket = getsocket();\r\n        console.log(\"Obtained socketio socket, connection: \", this.socket.connected);\r\n        this.toConsole(\"Instantiating base class NotificationsIO\");\r\n\r\n    }\r\n\r\n    subscribe(that) {\r\n        this.toConsole('Subscribing to report ', that.state.id)\r\n\r\n    }\r\n    unsubscribe(that) {\r\n        this.toConsole(\"Unsubscribing from getting report \" + that.state.id);\r\n\r\n    }\r\n\r\n    toConsole(...args) {\r\n        var msgflat = args.join(' ');\r\n        console.log(\"[\" + this.id + \"]\", msgflat)\r\n    }\r\n\r\n}\r\nclass CreateReport extends NotificationsIO {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        var that = this;\r\n\r\n        this.toConsole(\"Instantiating\");\r\n        that.id = \"Report_\" + Date.now();\r\n\r\n        that.subscribers = [];\r\n\r\n        that.socket.on('report', data => {\r\n            that.toConsole('report arrived: ', JSON.stringify(data));\r\n            if (!data.error) {\r\n                that.toConsole('Subscribers: ', this.subscribers.length);\r\n                if (this.subscribers.length > 0)\r\n                    that.subscribers.forEach(el => {\r\n                        el.getReport(data)\r\n                    });\r\n            };\r\n        })\r\n    }\r\n\r\n\r\n\r\n    subscribe(that) {\r\n        this.toConsole('Subscribing to report ', that.state.id)\r\n        this.subscribers.push(that);\r\n        this.socket.emit('getReport', that.props.data.jobid);\r\n    }\r\n    unsubscribe(that) {\r\n        this.toConsole(\"Unsubscribing from getting report \" + that.state.id);\r\n        this.subscribers = this.subscribers.filter(el => el !== that);\r\n    }\r\n\r\n}\r\n\r\nclass JobNotifications extends NotificationsIO {\r\n    constructor() {\r\n        super()\r\n        var that = this;\r\n\r\n        that.id = \"Report_\" + Date.now();\r\n\r\n        this.toConsole(\"Instantiating\");\r\n        that.subscribers = [];\r\n\r\n        that.socket.on('client data', data => {\r\n            that.toConsole('client data arrived: ', JSON.stringify(data));\r\n            if (!data.error) {\r\n                that.toConsole('Subscribers: ', this.subscribers.length);\r\n                if (this.subscribers.length > 0)\r\n                    that.subscribers.forEach(el => {\r\n                        el.getReport(data)\r\n                    });\r\n            };\r\n        })\r\n    }\r\n\r\n    subscribe(that) {\r\n        this.toConsole('Subscribing to report ', that.state.id)\r\n        this.subscribers.push(that);\r\n        //this.socket.emit('getReport', that.props.data.jobid);\r\n    }\r\n    unsubscribe(that) {\r\n        this.toConsole(\"Unsubscribing from getting report \" + that.state.id);\r\n        this.subscribers = this.subscribers.filter(el => el !== that);\r\n    }\r\n\r\n    startJob() {\r\n\r\n        this.socket.emit('start job', null);\r\n    }\r\n}\r\n\r\n/*\r\nconsole.log(\"Instantiating notifications\");\r\nvar Report = new CreateReport();\r\nvar JobNotification = new JobNotifications();\r\n*/\r\n\r\n//socket.emit('getJobNotifications', jobid);\r\nexport { CreateReport, JobNotifications }","import React, { Component } from 'react';\r\nimport DataTable from \"react-data-table-component\";\r\nimport { CreateReport } from '../sock';\r\n//import makeCancellable from '../lib/cancellable';\r\n\r\nconst dt_errors_columns = [\r\n    {\r\n        name: 'Solution',\r\n        selector: 'search.solution_name',\r\n        sortable: false,\r\n    },\r\n    {\r\n        name: 'Component',\r\n        selector: 'search[\"component\"]',\r\n        cell: row => <a href={row.search[\"component-href\"]}>{row.search.component}</a>,\r\n        sortable: false,\r\n    },\r\n    {\r\n        name: 'Release',\r\n        selector: 'search[\"release-link-href\"]',\r\n        sortable: false,\r\n        cell: row => <a href={row.search[\"release-link-href\"]}>{row.search.release}</a>\r\n    },\r\n    {\r\n        name: 'Error',\r\n        selector: 'error',\r\n        sortable: false,\r\n    }\r\n];\r\nconst dt_report_columns = [\r\n    {\r\n        name: 'Family',\r\n        selector: 'family',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Solution',\r\n        selector: 'solution_name',\r\n        sortable: false,\r\n    },\r\n    {\r\n        name: 'Component',\r\n        selector: 'component',\r\n        cell: row => <a href={row[\"component-href\"]}>{row.component}</a>,\r\n        sortable: false,\r\n    },\r\n    {\r\n        name: 'Release',\r\n        selector: 'release-link-href',\r\n        sortable: false,\r\n        cell: row => <a href={row[\"release-link-href\"]}>{row.release}</a>\r\n    },\r\n    {\r\n        name: 'Date',\r\n        selector: 'release_date',\r\n        sortable: false,\r\n    },\r\n    {\r\n        name: 'Type',\r\n        selector: 'release_type',\r\n        sortable: false,\r\n    },\r\n    {\r\n        name: 'execution time, ms',\r\n        selector: 'executiontime',\r\n        sortable: false,\r\n    }\r\n]\r\n// The row data is composed into your custom expandable component via the data prop\r\nclass ExpendableComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"init instance of ExpendableComponent\", this);\r\n        var id = 'ExpendableComponent_' + Date.now();\r\n        this.state = {\r\n            'id': id,\r\n            data:\r\n            {\r\n                report:\r\n                {\r\n                    invocations: 0,\r\n                    execution_duration: 0,\r\n                    errors: [],\r\n                    execution_report: [],\r\n                    msg: null\r\n                }\r\n            },\r\n        }\r\n\r\n        this.report = new CreateReport();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Subscribe for report notifications, \", this.state.id);\r\n        this.report.subscribe(this);\r\n\r\n    }\r\n\r\n    //Report helper function\r\n    getReport(msgdata) {\r\n\r\n        if (msgdata.jobid === this.props.data.jobid)\r\n            this.setState({\r\n                data: msgdata\r\n            })\r\n        // we don't need reports populated more than once so unsubscribing after getting the state updated\r\n        //Report.unsubscribe(this)\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.report.unsubscribe(this)\r\n    }\r\n\r\n    renderReport() {\r\n        const { data } = this.state;\r\n\r\n        if (data.report.msg) return <p>{data.report.msg}</p>;\r\n        return (\r\n            <React.Fragment>\r\n                <p><span>Last executed at </span><span>{data.report.last_execution_time}</span></p>\r\n                <p><span>Duration </span><span>{data.report.execution_duration}</span></p>\r\n                <DataTable title=\"New records\" columns={dt_report_columns} data={data.report.execution_report} />\r\n                <DataTable title=\"Errors\" columns={dt_errors_columns} data={data.report.errors} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data } = this.state;\r\n\r\n        console.log('Data: ', data)\r\n        return (\r\n            <div className='m-3' name={\"report-\" + this.props.data.jobid}>\r\n                {this.renderReport()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n} export default ExpendableComponent\r\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:7c11e036-46e2-4007-abcf-97ca4eb9c242\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_aPD8oYCWF\",\n    \"aws_user_pools_web_client_id\": \"7omvkliuesb6bffjcidmrlunqs\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import React, { Component } from 'react';\n\nimport DataTable from \"react-data-table-component\";\nimport { JobNotifications } from './sock';\nimport ExpendableComponent from './components/expendablecomponent';\n\nimport { withAuthenticator } from 'aws-amplify-react'; // or 'aws-amplify-react-native';\nimport Amplify from 'aws-amplify';\n// Get the aws resources configuration parameters\nimport awsconfig from './aws-exports'; // if you are using Amplify CLI\n\nAmplify.configure(awsconfig);\n\n\n\nconst data = [];\nconst columns = [\n  {\n    name: 'JOB ID',\n    selector: 'jobid',\n    sortable: true,\n  },\n  {\n    name: 'Next Run',\n    selector: 'next-run',\n    sortable: false,\n  },\n  {\n    name: 'Invocations',\n    selector: 'invocations',\n    sortable: false,\n  },\n  {\n    name: 'Start url',\n    selector: 'url',\n    sortable: false,\n  },\n  {\n    name: 'Status',\n    selector: 'status',\n    sortable: false,\n  },\n  {\n    name: 'Progress',\n    selector: 'progress',\n    sortable: false,\n  },\n];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.id = Date.now();\n    this.state = {\n      response: 0,\n      endpoint: \"http://192.168.14.91:3030\",\n      columns: columns,\n      data: data,\n      id: \"Application_\" + Date.now()\n    };\n\n    this.notification = new JobNotifications();\n\n    console.log(\"Instantiating \", this.state.id)\n  }\n\n  componentDidMount() {\n\n    console.log(\"componentDidMount \", this.state.id)\n\n    this.notification.subscribe(this);\n  }\n\n  //Report helper function\n  getReport(msgdata) {\n\n    this.setState({\n      data: msgdata\n    })\n  }\n\n  componentWillUnmount() {\n    this.notification.unsubscribe(this);\n  }\n  render() {\n    const { columns, data } = this.state;\n    console.log(\"Rendering \" + this.state.id)\n    return (\n      <div className='m-2'>\n        <h1>Genesys Release notes webscrapper service</h1>\n        <DataTable\n          title=\"List of available scrapper jobs\"\n          columns={columns}\n          data={data}\n          expandableRows\n          expandableRowsComponent={<ExpendableComponent />}\n        />\n        <div>\n          <button key=\"startJob\" onClick={() => this.notification.startJob()}>Start immediate job</button>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default withAuthenticator(App, {\n  // Render a sign out button once logged in\n  includeGreetings: true\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  React.createElement(App, null),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}