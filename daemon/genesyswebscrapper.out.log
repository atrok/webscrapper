EventEmitter {
  start: [AsyncFunction: start],
  store: [Function: store],
  report: [Function: report],
  logger: 
   DerivedLogger {
     _readableState: 
      ReadableState {
        objectMode: true,
        highWaterMark: 16,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: [Array],
        pipesCount: 3,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: { end: [Array], prefinish: [Function: prefinish], data: [Array] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: true,
        highWaterMark: 16,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      { afterTransform: [Function: bound afterTransform],
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null },
     silent: undefined,
     format: Format { options: {}, Format: [Function: Format] },
     levels: 
      { error: 0,
        warn: 1,
        info: 2,
        http: 3,
        verbose: 4,
        debug: 5,
        silly: 6 },
     level: 'info',
     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },
     profilers: {},
     exitOnError: true,
     error: [Function],
     isErrorEnabled: [Function],
     warn: [Function],
     isWarnEnabled: [Function],
     info: [Function],
     isInfoEnabled: [Function],
     http: [Function],
     isHttpEnabled: [Function],
     verbose: [Function],
     isVerboseEnabled: [Function],
     debug: [Function],
     isDebugEnabled: [Function],
     silly: [Function],
     isSillyEnabled: [Function] },
  starturl: 'https://docs.genesys.com/Documentation/RN',
  connection_string: 
   { dbtype: 'couchdb',
     couchdb_host: '192.168.14.91',
     couchdb_port: 5984,
     couchdb_username: 'admin',
     couchdb_pass: 'Genesys#1',
     dbname: 'genesys_releases' } }
info: Web Scrapper server is listening on *:3030 {"label":"webscrapper","timestamp":"2019-06-16T07:17:29.638Z"}
EventEmitter {
  start: [AsyncFunction: start],
  store: [Function: store],
  report: [Function: report],
  logger: 
   DerivedLogger {
     _readableState: 
      ReadableState {
        objectMode: true,
        highWaterMark: 16,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: [Array],
        pipesCount: 3,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: { end: [Array], prefinish: [Function: prefinish], data: [Array] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: true,
        highWaterMark: 16,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      { afterTransform: [Function: bound afterTransform],
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null },
     silent: undefined,
     format: Format { options: {}, Format: [Function: Format] },
     levels: 
      { error: 0,
        warn: 1,
        info: 2,
        http: 3,
        verbose: 4,
        debug: 5,
        silly: 6 },
     level: 'info',
     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },
     profilers: {},
     exitOnError: true,
     error: [Function],
     isErrorEnabled: [Function],
     warn: [Function],
     isWarnEnabled: [Function],
     info: [Function],
     isInfoEnabled: [Function],
     http: [Function],
     isHttpEnabled: [Function],
     verbose: [Function],
     isVerboseEnabled: [Function],
     debug: [Function],
     isDebugEnabled: [Function],
     silly: [Function],
     isSillyEnabled: [Function] },
  starturl: 'https://docs.genesys.com/Documentation/RN',
  connection_string: 
   { dbtype: 'couchdb',
     couchdb_host: '192.168.14.91',
     couchdb_port: 5984,
     couchdb_username: 'admin',
     couchdb_pass: 'Genesys#1',
     dbname: 'genesys_releases' } }
info: Web Scrapper server is listening on *:3030 {"label":"webscrapper","timestamp":"2019-06-16T07:33:12.734Z"}
